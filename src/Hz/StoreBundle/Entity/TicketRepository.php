<?php

namespace Hz\StoreBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TicketRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TicketRepository extends EntityRepository
{
	public function findTicketsForViews(){
		return $this->getEntityManager()
            ->createQuery(
                'SELECT t.id, t.status, t.code, t.dueDate, t.createDate, m.model, c.firstname, c.lastname, tech.firstname AS t_firstname, tech.lastname AS t_lastname FROM HzStoreBundle:Ticket t 
                LEFT JOIN HzStoreBundle:Machine m WITH t.machine = m.id 
                LEFT JOIN HzStoreBundle:Customer c WITH m.customer = c.id 
                LEFT JOIN HzStoreBundle:Task ts WITH ts.ticket = t.id
                LEFT JOIN HzStoreBundle:Technician tech WITH ts.technician = tech.id
                WHERE t.status != :status ORDER BY t.dueDate DESC'
            )
            ->setParameter('status', 'New')
            ->getResult();
	}

    public function findTicketsForViewsByStatus($status){
        return $this->getEntityManager()
            ->createQuery(
                'SELECT t.id, t.status, t.code, t.dueDate, t.createDate, m.model, c.firstname, c.lastname FROM HzStoreBundle:Ticket t 
                LEFT JOIN HzStoreBundle:Machine m WITH t.machine = m.id 
                LEFT JOIN  HzStoreBundle:Customer c WITH m.customer = c.id WHERE t.status = :status ORDER BY t.dueDate DESC'
            )
            ->setParameter('status', $status)
            ->getResult();
    }

    public function findTicketsForTechnician($tech_id) {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT t.status, t.dueDate, t.createDate, m.model, c.firstname, c.lastname, tech.firstname AS t_firstname, tech.lastname AS t_lastname FROM HzStoreBundle:Ticket t 
                LEFT JOIN HzStoreBundle:Machine m WITH t.machine = m.id 
                LEFT JOIN HzStoreBundle:Customer c WITH m.customer = c.id 
                LEFT JOIN HzStoreBundle:Task ts WITH ts.ticket = t.id
                LEFT JOIN HzStoreBundle:Technician tech WITH ts.technician = tech.id
                WHERE tech.id = :id GROUP BY t.status ORDER BY t.dueDate DESC'
            )
            ->setParameter('id', $tech_id)
            ->getResult();
    }

    public function findTicketsByCode($code) {
        $data = $this->getEntityManager()
            ->createQuery(
                'SELECT t.id, t.status, t.code, t.dueDate, t.createDate, t.price, t.reference, m.id AS mid, m.model, m.brand, m.serial, m.comments, m.password, c.firstname, c.lastname, c.company, c.email, c.phone, c.address1, c.address2, c.suburb, c.postcode, tech.firstname AS t_firstname, tech.lastname AS t_lastname FROM HzStoreBundle:Ticket t 
                LEFT JOIN HzStoreBundle:Machine m WITH t.machine = m.id 
                LEFT JOIN HzStoreBundle:Customer c WITH m.customer = c.id 
                LEFT JOIN HzStoreBundle:Task ts WITH ts.ticket = t.id
                LEFT JOIN HzStoreBundle:Technician tech WITH ts.technician = tech.id
                WHERE t.code = :code GROUP BY t.status ORDER BY t.dueDate DESC'
            )
            ->setParameter('code', $code)
            ->getResult();
        return $data[0];
    }

    public function search($term) {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT t.id, t.status, t.code, t.dueDate, t.createDate, m.model, m.serial, c.firstname, c.lastname, tech.firstname AS t_firstname, tech.lastname AS t_lastname FROM HzStoreBundle:Ticket t 
                LEFT JOIN HzStoreBundle:Machine m WITH t.machine = m.id 
                LEFT JOIN HzStoreBundle:Customer c WITH m.customer = c.id 
                LEFT JOIN HzStoreBundle:Task ts WITH ts.ticket = t.id
                LEFT JOIN HzStoreBundle:Technician tech WITH ts.technician = tech.id
                WHERE t.code LIKE :term OR m.model LIKE :term OR m.serial LIKE :term'
            )
            ->setParameter('term', '%'.$term.'%')
            ->getResult();
    } 

    // public function getTicketInfoById($ticket_id){
    //     return $this->getEntityManager()
    //         ->createQuery(
    //             'SELECT t.status, t.dueDate, t.createDate, m.model, c.firstname, c.lastname, tech.firstname AS t_firstname, tech.lastname AS t_lastname FROM HzStoreBundle:Ticket t 
    //             LEFT JOIN HzStoreBundle:Machine m WITH t.machine = m.id 
    //             LEFT JOIN HzStoreBundle:Customer c WITH m.customer = c.id 
    //             LEFT JOIN HzStoreBundle:Task ts WITH ts.ticket = t.id
    //             LEFT JOIN HzStoreBundle:Technician tech WITH ts.technician = tech.id
    //             WHERE t.code = :code GROUP BY t.status ORDER BY t.dueDate DESC'
    //         )
    //         ->setParameter('code', $code)
    //         ->getResult();
    // }
}
